window.SIDEBAR_ITEMS = {"fn":[["make_runner",""],["test_1","Test a function that takes a single value."],["test_2","Test a function that takes two values."],["test_3","Test a function that takes two values."],["test_binary_elementwise","Test a binary vector function against a binary scalar function, applied elementwise."],["test_binary_scalar_lhs_elementwise","Test a binary vector-scalar function against a binary scalar function, applied elementwise."],["test_binary_scalar_rhs_elementwise","Test a binary vector-scalar function against a binary scalar function, applied elementwise."],["test_ternary_elementwise","Test a ternary vector function against a ternary scalar function, applied elementwise."],["test_unary_elementwise","Test a unary vector function against a unary scalar function, applied elementwise."],["test_unary_mask_elementwise","Test a unary vector function against a unary scalar function, applied elementwise."]],"macro":[["prop_assert_biteq",""],["test_lanes","Expand a const-generic test into separate tests for each possible lane count."],["test_lanes_panic","Expand a const-generic `#[should_panic]` test into separate tests for each possible lane count."]],"mod":[["array","Generic-length array strategy."],["biteq","Compare numeric types by exact bit value."]],"trait":[["DefaultStrategy","Specifies the default strategy for testing a type."]]};